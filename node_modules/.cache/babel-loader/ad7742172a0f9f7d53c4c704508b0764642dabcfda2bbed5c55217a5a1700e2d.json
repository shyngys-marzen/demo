{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setCookie } from \"../helpers/setCookie\";\nconst BASE_URL = {\n  all_products: \"https://dummyjson.com/products\",\n  auth: \"https://dummyjson.com/auth/login\"\n};\nexport const getAllProductsThunk = createAsyncThunk(\"productSlice/getAllProductsThunk\", async function ({\n  limit\n}) {\n  try {\n    const response = await fetch(BASE_URL.all_products + \"?limit=\" + limit);\n    const data = await response.json();\n    return data;\n  } catch (error) {}\n});\nexport const getAllCategoryThunk = createAsyncThunk(\"productSlice/getAllCategoryThunk\", async function () {\n  try {\n    const response = await fetch(BASE_URL.all_products + \"/categories\");\n    const data = await response.json();\n    return data;\n  } catch (error) {}\n});\nexport const getUserAuthThunk = createAsyncThunk(\"userSlice/getUserAuthThunk\", async function (value, {\n  rejectWithValue\n}) {\n  try {\n    const response = await fetch(BASE_URL.auth, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(value)\n    });\n    if (!response.ok) {\n      throw new Error(\"Вы неверно указали логин или пароль!!!\");\n    }\n    const data = await response.json();\n    setCookie({\n      username: data.username,\n      password: value.password\n    });\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const getProductsOfCategoryThunk = createAsyncThunk(\"productSlice/getProductsOfCategory\", async function (category) {\n  try {\n    const response = await fetch(BASE_URL.all_products + \"/category/\" + category);\n    const data = await response.json();\n    return data;\n  } catch (error) {}\n});","map":{"version":3,"names":["createAsyncThunk","setCookie","BASE_URL","all_products","auth","getAllProductsThunk","limit","response","fetch","data","json","error","getAllCategoryThunk","getUserAuthThunk","value","rejectWithValue","method","headers","body","JSON","stringify","ok","Error","username","password","message","getProductsOfCategoryThunk","category"],"sources":["C:/Users/Acer/Desktop/project/demo/src/Data/productThunk.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setCookie } from \"../helpers/setCookie\";\n\nconst BASE_URL = {\n  all_products: \"https://dummyjson.com/products\",\n  auth: \"https://dummyjson.com/auth/login\",\n};\n\nexport const getAllProductsThunk = createAsyncThunk(\n  \"productSlice/getAllProductsThunk\",\n  async function ({ limit }) {\n    try {\n      const response = await fetch(\n        BASE_URL.all_products + \"?limit=\" + limit\n      );\n\n      const data = await response.json();\n\n      return data;\n    } catch (error) {}\n  }\n);\n\nexport const getAllCategoryThunk = createAsyncThunk(\n  \"productSlice/getAllCategoryThunk\",\n  async function () {\n    try {\n      const response = await fetch(BASE_URL.all_products + \"/categories\");\n\n      const data = await response.json();\n\n      return data;\n    } catch (error) {}\n  }\n);\n\nexport const getUserAuthThunk = createAsyncThunk(\n  \"userSlice/getUserAuthThunk\",\n  async function (value, { rejectWithValue }) {\n    try {\n      const response = await fetch(BASE_URL.auth, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(value),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Вы неверно указали логин или пароль!!!\");\n      }\n\n      const data = await response.json();\n\n      setCookie({ username: data.username, password: value.password });\n\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const getProductsOfCategoryThunk = createAsyncThunk(\n  \"productSlice/getProductsOfCategory\",\n  async function (category) {\n    try {\n      const response = await fetch(\n        BASE_URL.all_products + \"/category/\" + category\n      );\n\n      const data = await response.json();\n\n      return data;\n    } catch (error) {}\n  }\n);\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,SAAS,QAAQ,sBAAsB;AAEhD,MAAMC,QAAQ,GAAG;EACfC,YAAY,EAAE,gCAAgC;EAC9CC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAGL,gBAAgB,CACjD,kCAAkC,EAClC,gBAAgB;EAAEM;AAAM,CAAC,EAAE;EACzB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1BN,QAAQ,CAACC,YAAY,GAAG,SAAS,GAAGG,KACtC,CAAC;IAED,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE,CAAC;AACnB,CACF,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAGZ,gBAAgB,CACjD,kCAAkC,EAClC,kBAAkB;EAChB,IAAI;IACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAQ,CAACC,YAAY,GAAG,aAAa,CAAC;IAEnE,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE,CAAC;AACnB,CACF,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAGb,gBAAgB,CAC9C,4BAA4B,EAC5B,gBAAgBc,KAAK,EAAE;EAAEC;AAAgB,CAAC,EAAE;EAC1C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAQ,CAACE,IAAI,EAAE;MAC1CY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,KAAK;IAC5B,CAAC,CAAC;IAEF,IAAI,CAACP,QAAQ,CAACc,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;IAC3D;IAEA,MAAMb,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElCT,SAAS,CAAC;MAAEsB,QAAQ,EAAEd,IAAI,CAACc,QAAQ;MAAEC,QAAQ,EAAEV,KAAK,CAACU;IAAS,CAAC,CAAC;IAEhE,OAAOf,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOI,eAAe,CAACJ,KAAK,CAACc,OAAO,CAAC;EACvC;AACF,CACF,CAAC;AAED,OAAO,MAAMC,0BAA0B,GAAG1B,gBAAgB,CACxD,oCAAoC,EACpC,gBAAgB2B,QAAQ,EAAE;EACxB,IAAI;IACF,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAC1BN,QAAQ,CAACC,YAAY,GAAG,YAAY,GAAGwB,QACzC,CAAC;IAED,MAAMlB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE,CAAC;AACnB,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}